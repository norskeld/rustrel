name: release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  BIN: rustrel

  # Temporary storage.
  TMP_DIR: /tmp/

  # Where to store built binaries (artifacts).
  TMP_ARTIFACTS: /tmp/artifacts/

  # Path to `cross` binary.
  TMP_CROSS: /tmp/cross

  # Targets. Linux.
  LINUX_64_GNU: x86_64-unknown-linux-gnu
  LINUX_32_GNU: i686-unknown-linux-gnu

  # Targets. macOS.
  MACOS_INTEL: x86_64-apple-darwin

  # Targets. Windows.
  WIN_64_MSVC: x86_64-pc-windows-msvc
  WIN_32_MSVC: i686-pc-windows-msvc

jobs:
  # Preparation.
  # ————————————————————————————————————————————————————————————————————————————————————————————————

  # >>> Installs `cross` and shares its binary across all building jobs.
  with-cross:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform: [linux, macos]

    steps:
      - name: Retrieve repository with full history.
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Retrieve matching `cross` release.
        id: cross
        uses: XAMPPRocky/get-github-release@v1
        with:
          owner: rust-embedded
          repo: cross
          matches: ${{ matrix.platform }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Share `cross` artifact.
        uses: actions/upload-artifact@v3
        with:
          name: cross-${{ matrix.platform }}
          path: ${{ steps.cross.outputs.install_path }}

  # Builders.
  # ————————————————————————————————————————————————————————————————————————————————————————————————

  # >>> Builds for linux targets.
  linux:
    runs-on: ubuntu-latest
    needs: with-cross

    strategy:
      matrix:
        target:
          - ${{ env.LINUX_64_GNU }}
          - ${{ env.LINUX_32_GNU }}

    steps:
      - name: Retrieve repository.
        uses: actions/checkout@v3

      - name: Retrieve `cross` artifact.
        uses: actions/download-artifact@v3
        with:
          name: cross-linux
          path: ${{ env.TMP_DIR }}

      - name: Make `cross` binary executable.
        run: chmod +x ${{ env.TMP_CROSS }}

      - name: Create artifacts directory.
        run: mkdir ${{ env.TMP_ARTIFACTS }}

      - name: Build & pack binary.
        id: built
        shell: bash
        env:
          TO: ${{ env.TMP_ARTIFACTS }}/${{ env.BIN }}.tar.gz
          FROM: target/${{ matrix.target }}/release/${{ env.BIN }}
        run: |
          .ci/rust.bash stable ${{ matrix.target }}
          .ci/build.bash ${{ env.TMP_CROSS }} ${{ matrix.target }} RELEASE
          tar -czvf $TO $FROM

      - name: Share built binary.
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: ${{ env.BIN }}.tar.gz
